===== Application Startup at 2025-06-10 08:02:30 =====

2025-06-10 08:02:37,832 - modules.config - INFO - Created directory: /app/data/cs_input
2025-06-10 08:02:37,832 - modules.config - INFO - Created directory: /tmp/reports/cs_reports
2025-06-10 08:02:37,832 - modules.config - INFO - Set PYTHONPATH to: /app
INFO:     Started server process [1]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:7860 (Press CTRL+C to quit)
INFO:     10.16.39.153:55181 - "GET /?logs=container HTTP/1.1" 200 OK
INFO:     10.16.39.72:48497 - "GET /?logs=container HTTP/1.1" 200 OK
2025-06-10 08:02:56,069 - modules.config - INFO - [ae73a681] Initial memory usage: 131.18 MB
2025-06-10 08:02:56,069 - modules.config - INFO - [ae73a681] Cleaning up old dataset files...
2025-06-10 08:02:56,069 - modules.utils - INFO - Starting comprehensive cleanup of old dataset files...
2025-06-10 08:02:56,070 - modules.utils - INFO - Comprehensive cleanup completed: {'raw_data': 0, 'processed_data': 0, 'reports': 0, 'intermediate': 0, 'total': 0}
2025-06-10 08:02:56,071 - modules.config - INFO - [ae73a681] Cleanup completed: {'raw_data': 0, 'processed_data': 0, 'reports': 0, 'intermediate': 0, 'total': 0}
2025-06-10 08:02:56,071 - modules.config - INFO - [ae73a681] No old files found to clean up
2025-06-10 08:02:57,584 - modules.config - INFO - [ae73a681] Received 2283 plans
2025-06-10 08:02:57,584 - modules.config - INFO - [ae73a681] Using Enhanced Cost-Spec method: linear_decomposition, feature_set=basic, fee_column=fee
2025-06-10 08:02:57,727 - modules.config - INFO - [ae73a681] Processed DataFrame shape: (2283, 77)
2025-06-10 08:02:57,820 - modules.cost_spec - INFO - Starting linear decomposition method
2025-06-10 08:02:57,821 - modules.cost_spec - INFO - Using features for decomposition: ['basic_data_clean', 'daily_data_clean', 'voice_clean', 'message_clean', 'additional_call', 'is_5g', 'tethering_gb', 'has_throttled_data', 'speed_when_exhausted']
2025-06-10 08:02:57,821 - modules.cost_spec - INFO - Decomposition features: ['basic_data_clean', 'voice_clean', 'message_clean', 'tethering_gb', 'is_5g']
2025-06-10 08:02:57,831 - modules.cost_spec - INFO - Selected 5 representative plans using diverse_segments method
2025-06-10 08:02:57,831 - modules.cost_spec - INFO - Extracted 5 representative plans
2025-06-10 08:02:57,832 - modules.cost_spec - INFO - Solving linear system with 5 plans and 6 coefficients
/home/user/.local/lib/python3.11/site-packages/scipy/optimize/_differentiable_functions.py:317: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(self.x - self.x_prev, self.g - self.g_prev)
/home/user/.local/lib/python3.11/site-packages/scipy/optimize/_differentiable_functions.py:552: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
2025-06-10 08:02:57,983 - modules.cost_spec - INFO - Linear decomposition solved successfully:
2025-06-10 08:02:57,983 - modules.cost_spec - INFO -   Base cost (β₀): ₩2,991
2025-06-10 08:02:57,983 - modules.cost_spec - INFO -   basic_data_clean cost: ₩0.00
2025-06-10 08:02:57,983 - modules.cost_spec - INFO -   voice_clean cost: ₩0.00
2025-06-10 08:02:57,983 - modules.cost_spec - INFO -   message_clean cost: ₩8.70
2025-06-10 08:02:57,983 - modules.cost_spec - INFO -   tethering_gb cost: ₩554.83
2025-06-10 08:02:57,983 - modules.cost_spec - INFO -   is_5g cost: ₩0.00
2025-06-10 08:02:57,983 - modules.cost_spec - INFO -   Mean absolute error: ₩1,177
2025-06-10 08:02:57,983 - modules.cost_spec - INFO -   Max absolute error: ₩3,172
2025-06-10 08:02:57,983 - modules.cost_spec - INFO - Successfully solved coefficients: [2.99121952e+03 1.61337040e-11 5.37728657e-12 8.70439024e+00
 5.54834145e+02 9.80515459e-09]
2025-06-10 08:02:57,984 - modules.cost_spec - INFO - Calculated baselines for 2283 plans
2025-06-10 08:02:58,105 - modules.cost_spec - INFO - Smallest feature increment for basic_data_clean: 0.04999999999999999
2025-06-10 08:02:58,109 - modules.cost_spec - INFO - Created ROBUST monotonic frontier for basic_data_clean with 14 points using 'original_fee'
2025-06-10 08:02:58,110 - modules.cost_spec - INFO - Added unlimited case for basic_data_clean (as basic_data_unlimited) with 'original_fee' 59000
2025-06-10 08:02:58,215 - modules.cost_spec - INFO - Smallest feature increment for daily_data_clean: 2.0
2025-06-10 08:02:58,216 - modules.cost_spec - INFO - Created ROBUST monotonic frontier for daily_data_clean with 3 points using 'original_fee'
2025-06-10 08:02:58,217 - modules.cost_spec - INFO - Added unlimited case for daily_data_clean (as daily_data_unlimited) with 'original_fee' 59000
2025-06-10 08:02:58,263 - modules.cost_spec - INFO - Smallest feature increment for voice_clean: 10
2025-06-10 08:02:58,264 - modules.cost_spec - INFO - Created ROBUST monotonic frontier for voice_clean with 9 points using 'original_fee'
2025-06-10 08:02:58,265 - modules.cost_spec - INFO - Added unlimited case for voice_clean (as voice_unlimited) with 'original_fee' 4900
2025-06-10 08:02:58,326 - modules.cost_spec - INFO - Smallest feature increment for message_clean: 10
2025-06-10 08:02:58,327 - modules.cost_spec - INFO - Created ROBUST monotonic frontier for message_clean with 4 points using 'original_fee'
2025-06-10 08:02:58,329 - modules.cost_spec - INFO - Added unlimited case for message_clean (as message_unlimited) with 'original_fee' 4900
2025-06-10 08:02:58,440 - modules.cost_spec - INFO - Smallest feature increment for additional_call: 3.0
2025-06-10 08:02:58,440 - modules.cost_spec - INFO - Created ROBUST monotonic frontier for additional_call (no unlimited option, using 'original_fee') with 6 points
2025-06-10 08:02:58,544 - modules.cost_spec - INFO - Smallest feature increment for is_5g: 1
2025-06-10 08:02:58,544 - modules.cost_spec - INFO - Created ROBUST monotonic frontier for is_5g (no unlimited option, using 'original_fee') with 2 points
2025-06-10 08:02:58,650 - modules.cost_spec - INFO - Smallest feature increment for tethering_gb: 0.02400000000000002
2025-06-10 08:02:58,651 - modules.cost_spec - INFO - Created ROBUST monotonic frontier for tethering_gb (no unlimited option, using 'original_fee') with 11 points
2025-06-10 08:02:58,758 - modules.cost_spec - INFO - Smallest feature increment for has_throttled_data: 1
2025-06-10 08:02:58,759 - modules.cost_spec - INFO - Created ROBUST monotonic frontier for has_throttled_data (no unlimited option, using 'original_fee') with 2 points
2025-06-10 08:02:58,860 - modules.cost_spec - INFO - Smallest feature increment for speed_when_exhausted: 1.0
2025-06-10 08:02:58,861 - modules.cost_spec - INFO - Created ROBUST monotonic frontier for speed_when_exhausted with 5 points using 'original_fee'
2025-06-10 08:02:58,861 - modules.cost_spec - INFO - Added unlimited case for speed_when_exhausted (as has_unlimited_speed) with 'original_fee' 59000
2025-06-10 08:02:58,923 - modules.cost_spec - INFO - Added contribution column for basic_data_clean: min=1700.0, max=59000.0
2025-06-10 08:02:58,953 - modules.cost_spec - INFO - Added contribution column for daily_data_clean: min=1700, max=59000
2025-06-10 08:02:58,985 - modules.cost_spec - INFO - Added contribution column for voice_clean: min=1700.0, max=12500.0
2025-06-10 08:02:59,041 - modules.cost_spec - INFO - Added contribution column for message_clean: min=1760.0, max=6080.0
2025-06-10 08:02:59,067 - modules.cost_spec - INFO - Added contribution column for additional_call: min=1700.0, max=8800.0
2025-06-10 08:02:59,097 - modules.cost_spec - INFO - Added contribution column for is_5g: min=1700, max=3300
2025-06-10 08:02:59,147 - modules.cost_spec - INFO - Added contribution column for tethering_gb: min=1700.0, max=38200.0
2025-06-10 08:02:59,173 - modules.cost_spec - INFO - Added contribution column for has_throttled_data: min=1700, max=5500
2025-06-10 08:02:59,213 - modules.cost_spec - INFO - Added contribution column for speed_when_exhausted: min=1700, max=59000
2025-06-10 08:02:59,479 - modules.cost_spec - INFO - Created cost_structure: {'base_cost': 2991.219524607844, 'feature_costs': {'basic_data_clean': 1.6133704003822207e-11, 'voice_clean': 5.3772865744406935e-12, 'message_clean': 8.704390237688177, 'tethering_gb': 554.8341451622877, 'is_5g': 9.805154591279148e-09}}
2025-06-10 08:02:59,481 - modules.config - INFO - [ae73a681] Ranked DataFrame shape: (2283, 85)
2025-06-10 08:02:59,481 - modules.config - INFO - Storing 2283 plans in global state for HTML report
2025-06-10 08:02:59,484 - modules.config - INFO - Top 10 plans by rank to be stored:
                    plan_name         CS  rank_number
1             티플 드림(3GB/200분)  63.966000            1
22           티플 5GB(5GB/300분)  60.325721            2
16              티플포유(5G/100분)  60.325721            3
17    [일반] 실속 (5GB/100분)_12개월  60.325721            4
2                 [S] 300분5GB  56.025366            5
34           [L]그란데(100분/6GB)  51.361882            6
28              [K] 250분2.5GB  46.975610            7
14                   심플100분2G  45.193880            8
31                  심플 200분2G  41.237339            9
5   [K] DIGITAL DETOX 3GB 챌린지  40.654390           10
/app/app.py:577: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`
  df_for_response = df_for_response.replace(np.nan, 0)
2025-06-10 08:02:59,502 - modules.config - INFO - [ae73a681] Checking for cost_structure in DataFrame attrs...
2025-06-10 08:02:59,502 - modules.config - INFO - [ae73a681] DataFrame has attrs: True
2025-06-10 08:02:59,502 - modules.config - INFO - [ae73a681] DataFrame attrs keys: ['decomposition_coefficients', 'cost_structure']
2025-06-10 08:02:59,502 - modules.config - INFO - [ae73a681] Cost structure discovered: {'base_cost': 2991.219524607844, 'feature_costs': {'basic_data_clean': 1.6133704003822207e-11, 'voice_clean': 5.3772865744406935e-12, 'message_clean': 8.704390237688177, 'tethering_gb': 554.8341451622877, 'is_5g': 9.805154591279148e-09}}
2025-06-10 08:02:59,516 - modules.config - INFO - [ae73a681] Prepared all_ranked_plans with 2283 plans
2025-06-10 08:02:59,516 - modules.report_html - INFO - Generating HTML report with title: Enhanced Cost-Spec Rankings (Linear Decomposition) (Linear Decomposition)
2025-06-10 08:02:59,519 - modules.config - ERROR - [ae73a681] Error generating HTML report: unsupported format string passed to dict.__format__
Successfully created directory: data/raw
Successfully created directory: data/processed
Successfully created directory: results
Successfully created directory: reports
Data types before conversion:
id                   int64
plan_name           object
network             object
mvno                object
mno                 object
basic_data         float64
daily_data         float64
data_exhaustion     object
voice                int64
message              int64
dtype: object
Skipping tethering unit conversion - already handled in SQL query
Data types after conversion:
id                   int64
plan_name           object
network             object
mvno                object
mno                 object
basic_data         float64
daily_data         float64
data_exhaustion     object
voice                int64
message              int64
dtype: object

=== HF SERVER PREPROCESSING DETAILS ===
Input DataFrame shape: (2283, 40)
Initial columns: ['id', 'plan_name', 'network', 'mvno', 'mno', 'basic_data', 'daily_data', 'data_exhaustion', 'voice', 'message', 'additional_call', 'data_sharing', 'roaming_support', 'micro_payment', 'is_esim', 'signup_minor', 'signup_foreigner', 'has_usim', 'has_nfc_usim', 'tethering_gb', 'tethering_status', 'tethering_data_unit', 'esim_fee', 'esim_fee_status', 'usim_delivery_fee', 'nfc_usim_delivery_fee', 'usim_delivery_fee_status', 'nfc_usim_delivery_fee_status', 'fee', 'original_fee', 'discount_fee', 'discount_period', 'post_discount_fee', 'agreement', 'agreement_period', 'agreement_type', 'num_of_signup', 'mvno_rating', 'monthly_review_score', 'discount_percentage']
Created is_5g feature: 427 5G plans found
Found 1446 plans with throttled data
Found 21 plans with unlimited basic data
Found 4 plans with unlimited daily data
Maximum values: basic_data=300.0, daily_data=5.0
NaN values imputed: 5378 -> 0

=== FINAL PREPROCESSING STATS ===
Output DataFrame shape: (2283, 77)
Features generated: 77

Basic features available (13/13):
  ✓ is_5g
  ✓ basic_data_clean
  ✓ basic_data_unlimited
  ✓ daily_data_clean
  ✓ daily_data_unlimited
  ✓ voice_clean
  ✓ voice_unlimited
  ✓ message_clean
  ✓ message_unlimited
  ✓ throttle_speed_normalized
  ✓ tethering_gb
  ✓ unlimited_type_numeric
  ✓ additional_call

Key feature statistics:
  basic_data_clean: min=0.00, max=300.00, mean=25.03, median=10.00
  daily_data_clean: min=0.00, max=5.00, mean=0.37, median=0.00
  voice_clean: min=0.00, max=3000.00, mean=1771.24, median=3000.00
  message_clean: min=0.00, max=2000.00, mean=1147.92, median=2000.00
  throttle_speed_normalized: min=0.00, max=1.00, mean=0.17, median=0.10
  unlimited_type_numeric: min=0.00, max=3.00, mean=1.29, median=2.00
  original_fee: min=1700.00, max=77000.00, mean=26975.95, median=25300.00
INFO:     10.16.39.153:35086 - "POST /process HTTP/1.1" 200 OK
2025-06-10 08:03:04,181 - modules.report_html - INFO - Generating HTML report with title: Cost-Spec Mobile Plan Rankings (Linear Decomposition)
2025-06-10 08:03:04,183 - modules.config - ERROR - Error generating report from in-memory rankings: unsupported format string passed to dict.__format__
INFO:     10.16.36.140:20921 - "GET / HTTP/1.1" 200 OK
2025-06-10 08:03:05,123 - modules.report_html - INFO - Generating HTML report with title: Cost-Spec Mobile Plan Rankings (Linear Decomposition)
2025-06-10 08:03:05,125 - modules.config - ERROR - Error generating report from in-memory rankings: unsupported format string passed to dict.__format__
INFO:     10.16.36.140:20921 - "GET / HTTP/1.1" 200 OK